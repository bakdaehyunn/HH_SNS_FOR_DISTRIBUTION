<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.spring.ex06.LikeInfoMapper">
	<!-- ★ ${key 이름} : mybatis-config.xml의 property - name(vo)과 매칭. DB 테이블의 
		컬럼 ★ #{key 이름} : dao 클래스의 sqlSession에서 전송받은 데이터 변수명(입력받은 데이터) -->



	<!-- 
		INSERT INTO [테이블명] values([시퀀스명].NEXTVAL, 'test');
	 -->
	
	<insert id="insert">
		insert into ${like_info}
		values (NULL, #{userId}, #{feedId}, CURRENT_TIMESTAMP)
	</insert>
	
	<select id="select" resultType="LikeInfoVO">
		select ${likeId}, ${userId}, ${feedId} from ${like_info}
		where ${likeId} = #{likeId}
	 </select>
	 
	 <select id="select_all" resultType="LikeInfoVO">
	 	select * from ${like_info}
	 </select>

	 
	 <select id="select_check" resultType="LikeInfoVO">
	 	select * from ${like_info} where ${userId} = #{userId} and ${feedId} = #{feedId}
	 </select>
	 
	 <select id="select_check_all_userid" resultType="LikeInfoVO">
	 	select * from ${like_info}
		where ${userId} = #{userId}
	 </select>
	 
	 <select id="select_all_id" resultType="FeedVO">
		select f. * from ${feed} f
		join ${like_info} l on f.${feedId} = l.${feedId} where l.${userId} = #{userId} 
		order by ${likeDate} desc
	</select>

	 <delete id="delete">
	 	delete from ${like_info}
	 	where ${likeId} = #{likeId}
	 </delete>
	 <delete id="delete_userId">
	 	delete from ${like_info}
	 	where ${userId} = #{userId}
	 </delete>


</mapper>